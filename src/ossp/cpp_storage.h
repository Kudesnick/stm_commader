/***************************************************************************************************
 *   Project:       
 *   Author:        
 ***************************************************************************************************
 *   Distribution:  
 *
 ***************************************************************************************************
 *   MCU Family:    STM32F
 *   Compiler:      ARMCC
 ***************************************************************************************************
 *   File:          cpp_storage.h
 *   Description:   
 *
 ***************************************************************************************************
 *   History:       29.05.2019 - file created
 *
 **************************************************************************************************/

#pragma once

/***************************************************************************************************
 *                                      INCLUDED FILES
 **************************************************************************************************/

#include <stdlib.h>
#include <stdint.h>
#include "cpp_os.h"
#include "cpp_mediator.h"

#ifdef __cplusplus
    using namespace std;
#endif

/***************************************************************************************************
 *                                       DEFINITIONS
 **************************************************************************************************/

/***************************************************************************************************
 *                                      PUBLIC TYPES
 **************************************************************************************************/

//-- Кнопки

typedef enum
{
    KEY_UP,
    KEY_DOWN,
    KEY_LEFT,
    KEY_RIGHT,
    KEY_CENTER,
    
    KEY_CNT
} key_t;

typedef enum
{
    KEY_POP = 0,
    KEY_PUSH,
    KEY_CLICK,
    KEY_DOUBLE_CLICK,
    KEY_LONG_PRESS,
    KEY_DBL_LONG_PRESS,
    
    KEY_EVENT_CNT,
} key_event_t;

/***************************************************************************************************
 *                                PUBLIC FUNCTION PROTOTYPES
 **************************************************************************************************/

/***************************************************************************************************
 *                               PUBLIC CLASS
 **************************************************************************************************/

/***************************************************************************************************
 *                                     GLOBAL VARIABLES
 **************************************************************************************************/

namespace mediator
{
    extern message_t<key_event_t> btns[KEY_CNT];
};

/***************************************************************************************************
 *                                       END OF FILE
 **************************************************************************************************/
